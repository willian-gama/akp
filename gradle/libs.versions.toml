# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format
[versions]
android = "8.8.0"
androidx-junit = "1.2.1"
kotlin = "2.1.0"
ksp = "2.1.0-1.0.29"
code-analysis = "1.0.42"
paparazzi = "1.3.5"
compose-activity = "1.9.3"
compose = "1.7.6"
paging = "3.3.5"
compose-coil = "3.0.4" # Version 3.0.4 breaks Paparazzi screenshot tests
compose-navigation = "2.8.5"
compose-hilt-navigation = "1.2.0"
junit = "4.13.2"
hilt = "2.55"
core_ktx = "1.6.1"
mockwebserver = "4.12.0"
robolectric = "4.14.1"
test_runner = "1.6.2"
coroutines = "1.10.1"
splashscreen = "1.0.1"
crypto = "1.0.0"
datastore = "1.1.1"
timber = "5.0.1"
lifecycle = "2.8.7"
retrofit = "2.11.0"
moshi = "1.15.2"
okhttp = "4.12.0"
chucker = "4.1.0"
leakcanary = "2.14"
mockk = "1.13.16"
kotlinx-serialization-json = "1.8.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "android" }
android-library = { id = "com.android.library", version.ref = "android" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

[libraries]
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose" }
compose-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-paging = { module = "androidx.paging:paging-compose", version.ref = "paging" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" } # Navigation https://developer.android.com/jetpack/compose/navigation#setup
compose-hilt-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "compose-hilt-navigation" } # Navigation with Hilt: https://developer.android.com/jetpack/compose/libraries#hilt-navigation
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "compose-activity" }
compose-coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "compose-coil" }
code-analysis = { module = "com.willian.gama:kgp", version.ref = "code-analysis" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" } # Splash screen: https://developer.android.com/develop/ui/views/launch/splash-screen/migrate
crypto = { module = "androidx.security:security-crypto", version.ref = "crypto" } # Encrypt data: https://developer.android.com/topic/security/data#include-library
paging-runtime = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" } # Paging: https://developer.android.com/jetpack/androidx/releases/paging#declaring_dependencies
datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" } # Lifecycle scope: https://developer.android.com/topic/libraries/architecture/coroutines#dependencies
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" } # Hilt: https://developer.android.com/training/dependency-injection/hilt-android
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" } # Coroutine Android: https://github.com/Kotlin/kotlinx.coroutines#android
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chucker-no-op = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
# test libraries
test-junit = { module = "junit:junit", version.ref = "junit" }
test-androix-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
test-hilt = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
test-core-ktx = { module = "androidx.test:core-ktx", version.ref = "core_ktx" } # To use with Robolectric: https://robolectric.org/androidx_test
test-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
test-robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" } # Robolectric Hilt: https://dagger.dev/hilt/robolectric-testing.html
test-runner = { module = "androidx.test:runner", version.ref = "test_runner" } # AndroidJUnitRunner: https://developer.android.com/training/testing/instrumented-tests/androidx-test-libraries/runner
test-compose-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" } # https://developer.android.com/jetpack/compose/testing#setup
test-compose-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" } # Coroutines: https://developer.android.com/kotlin/coroutines/test
test-coil = { module = "io.coil-kt.coil3:coil-test", version.ref = "compose-coil" }
test-mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }